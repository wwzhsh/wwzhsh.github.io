<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>博客 on 万物之时</title>
        <link>https://hugo.126330.xyz/tags/%E5%8D%9A%E5%AE%A2/</link>
        <description>Recent content in 博客 on 万物之时</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>万物之时</copyright>
        <lastBuildDate>Tue, 29 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://hugo.126330.xyz/tags/%E5%8D%9A%E5%AE%A2/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Gmeek博客一键搭搭建教程</title>
        <link>https://hugo.126330.xyz/p/3/</link>
        <pubDate>Tue, 29 Oct 2024 00:00:00 +0000</pubDate>
        
        <guid>https://hugo.126330.xyz/p/3/</guid>
        <description>&lt;img src="https://tuwwzs.pages.dev/file/1729411266664_light.jpg" alt="Featured image of post Gmeek博客一键搭搭建教程" /&gt;&lt;h1 id=&#34;项目地址httpsgithubcommeekdaigmeek&#34;&gt;项目地址https://github.com/Meekdai/Gmeek
&lt;/h1&gt;&lt;h1 id=&#34;博客原文地址gmeek博客一键搭搭建教程httpsblogwwzsfuntutorial2html&#34;&gt;博客原文地址&lt;a class=&#34;link&#34; href=&#34;https://blog.wwzs.fun/tutorial/2.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gmeek博客一键搭搭建教程&lt;/a&gt;
&lt;/h1&gt;&lt;h1 id=&#34;gmeek-搭建教程&#34;&gt;Gmeek 搭建教程
&lt;/h1&gt;&lt;p&gt;Gmeek 是一个超轻量级的个人博客框架，完全基于 GitHub Pages、GitHub Issues 和 GitHub Actions 构建。无需本地部署，从搭建到写作仅需 &lt;strong&gt;18 秒&lt;/strong&gt; 和 &lt;strong&gt;两步&lt;/strong&gt;，而 &lt;strong&gt;第三步&lt;/strong&gt; 就可以开始写作。&lt;/p&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言
&lt;/h2&gt;&lt;p&gt;Gmeek 旨在为个人博客提供一个简洁、高效的解决方案。借助 GitHub 的强大功能，你无需担心服务器配置和维护，只需简单几步即可完成博客的搭建与管理。Gmeek 利用了 GitHub Pages 进行静态页面托管，GitHub Issues 作为博客文章的创作平台，GitHub Actions 自动化部署流程，使整个流程自动化、无缝衔接。&lt;/p&gt;
&lt;h2 id=&#34;特点&#34;&gt;特点
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;与 GitHub 同源的 UI 界面&lt;/strong&gt;：采用 GitHub 原生 CSS&lt;a class=&#34;link&#34; href=&#34;https://primer.style/css&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;primer.style&lt;/a&gt;，界面风格与 GitHub 无缝衔接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;自动化部署&lt;/strong&gt;：在 Issues 中完成博客写作后，自动触发 GitHub Actions 执行部署任务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;评论系统&lt;/strong&gt;：集成 &lt;a class=&#34;link&#34; href=&#34;https://utteranc.es/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;utteranc.es&lt;/a&gt; 作为评论系统，轻量且易于使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;可自定义主题&lt;/strong&gt;：使用 Jinja2 对 HTML 进行渲染，支持通过模板自定义 UI 主题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;无需本地部署&lt;/strong&gt;：所有操作均在 GitHub 上完成，简化部署流程。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;示例&#34;&gt;示例
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;官方 &lt;a class=&#34;link&#34; href=&#34;http://meekdai.github.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Demo页面&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我建立的&lt;a class=&#34;link&#34; href=&#34;https://wanwuzhishi.github.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wanwuzhishi.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;快速上手&#34;&gt;快速上手
&lt;/h2&gt;&lt;p&gt;按照以下步骤，可以在 &lt;strong&gt;两步，18 秒&lt;/strong&gt;  内完成 Gmeek 博客的搭建。&lt;/p&gt;
&lt;h3 id=&#34;1-创建仓库&#34;&gt;1. 创建仓库
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/new?template_name=Gmeek-template&amp;amp;template_owner=Meekdai&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;通过模板创建仓库&lt;/a&gt;&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 点击&lt;a class=&#34;link&#34; href=&#34;https://github.com/new?template_name=Gmeek-template&amp;amp;template_owner=Meekdai&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;通过模板创建仓库&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;命名仓库&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 推荐将仓库命名为 &lt;code&gt;YOUR_GITHUB_USERNAME.github.io&lt;/code&gt;，其中 &lt;code&gt;YOUR_GITHUB_USERNAME&lt;/code&gt; 为你的 GitHub 用户名。&lt;/p&gt;
&lt;p&gt;    - 示例：如果你的 GitHub 用户名为 &lt;code&gt;wanwuzhishi&lt;/code&gt;，则仓库名称应为 &lt;code&gt;wanwuzhishi.github.io&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;    &lt;img src=&#34;https://tuwwzs.pages.dev/file/1729410432618_Clip_2024-10-20_15-46-41.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;完成仓库创建&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 点击 &lt;code&gt;Create repository&lt;/code&gt;  完成仓库的创建。&lt;/p&gt;
&lt;h3 id=&#34;2-启用-github-pages&#34;&gt;2. 启用 GitHub Pages
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;进入仓库设置&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 在新创建的仓库页面，点击上方的 &lt;code&gt;Settings&lt;/code&gt; 标签。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;配置 Pages&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 在左侧菜单中，找到并点击 &lt;code&gt;Pages&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;    - 在 &lt;code&gt;Build and deployment&lt;/code&gt; 部分，设置 &lt;code&gt;Source&lt;/code&gt; 为 &lt;code&gt;GitHub Actions&lt;/code&gt;。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;保存设置&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 确认设置后，页面会自动保存，并显示部署状态。&lt;/p&gt;
&lt;h3 id=&#34;3-开始写作&#34;&gt;3. 开始写作
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;创建 Issue 文章&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 进入仓库的 &lt;code&gt;Issues&lt;/code&gt; 页面，点击 &lt;code&gt;New issue&lt;/code&gt; 创建一篇新的文章。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;添加标签&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 在创建 Issue 时，至少添加一个 &lt;code&gt;Label&lt;/code&gt;（标签），例如 &lt;code&gt;blog&lt;/code&gt;。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;保存 Issue&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 完成内容撰写后，点击 &lt;code&gt;Submit new issue&lt;/code&gt; 提交。&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;strong&gt;自动生成博客内容&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 提交 Issue 后，GitHub Actions 会自动触发构建流程。&lt;/p&gt;
&lt;p&gt;    - 片刻后，你的博客内容将生成并部署到 &lt;code&gt;https://YOUR_GITHUB_USERNAME.github.io&lt;/code&gt;。&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;&lt;strong&gt;查看构建进度&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 可进入 &lt;code&gt;Actions&lt;/code&gt; 页面查看构建的详细进度和日志。&lt;/p&gt;
&lt;h3 id=&#34;4-手动全局生成&#34;&gt;4. 手动全局生成
&lt;/h3&gt;&lt;p&gt;在以下情况下，需要手动全局生成博客内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;修改了 &lt;code&gt;config.json&lt;/code&gt; 文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;出现了构建或显示上的奇怪问题。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;操作步骤&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;进入 Actions 页面&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 在仓库页面，点击上方的 &lt;code&gt;Actions&lt;/code&gt; 标签。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;找到 Build Gmeek 工作流&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 在左侧工作流列表中，选择 &lt;code&gt;build Gmeek&lt;/code&gt;。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;运行工作流&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 点击 &lt;code&gt;Run workflow&lt;/code&gt; 按钮，手动触发一次全局重新生成。&lt;/p&gt;
&lt;h2 id=&#34;提交问题&#34;&gt;提交问题
&lt;/h2&gt;&lt;p&gt;如果在搭建或使用过程中遇到问题，可以参考以下步骤提交问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;参考快速上手&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 检查是否按照快速上手中的步骤正确操作。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;手动全局生成&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 在提交问题之前，先手动全局生成一次，确保问题不在配置文件或构建流程中。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;提交 Issue&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 如果问题依旧存在，进入仓库的 &lt;code&gt;Issues&lt;/code&gt; 页面，点击 &lt;code&gt;New issue&lt;/code&gt; 提交你的问题描述。&lt;/p&gt;
&lt;p&gt;    - 提供尽可能详细的信息，例如错误日志、截图等，以便更快定位问题。&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;strong&gt;协助解决&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 提交后，项目维护者会协助查看构建流程，帮助定位和解决问题。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结
&lt;/h2&gt;&lt;p&gt;Gmeek 为个人博客的创建和管理提供了一个简洁、快捷且高效的解决方案。通过利用 GitHub 的强大功能，用户无需担心复杂的部署流程，只需专注于内容创作即可。如果你正在寻找一个轻量级且易于维护的博客框架，Gmeek 无疑是一个值得尝试的选择。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
