[{"content":"Windows 激活方法 打开终端\n右键点击开始图标，选择Windows 终端（管理员）。\n输入激活命令\n在终端中逐条输入以下命令，按 Enter 键执行：\n1 slmgr -ipk 7Y64F-88DCY-Y6WTC-H33D2-64QHF 1 slmgr -skms kms.0t.net.cn 1 slmgr -ato 确认激活状态\n执行完最后一条命令后，您应该会看到“激活成功”的提示。\n通过以上步骤，您应该已经成功激活了 Windows 系统。\n","date":"2024-11-05T00:00:00Z","image":"https://tuwwzs.pages.dev/file/1730808329542_Clip_2024-11-05_20-05-11.png","permalink":"https://hugo.126330.xyz/p/13/","title":"Windows11专业版KMS命令激活"},{"content":"Windows版本切换工具 功能概述 目前支持 Windows 10 和 Windows 11 的所有版本系统切换，包括：\n专业版 企业版 家庭版 教育版 G企业版 该工具支持批量切换版本，大大节约了运维时间。整个切换过程无需联网，且支持静默模式切换。\n界面展示 下载链接 官方网站地址 官方蓝奏云下载链接\n123云盘下载链接\n直链下载\n总结 使用此工具，可以轻松实现不同版本之间的切换，提升工作效率，适合IT运维人员和企业用户。\n","date":"2024-11-04T00:00:00Z","image":"https://tuwwzs.pages.dev/file/1730703601723_Clip_2024-11-04_14-56-41.png","permalink":"https://hugo.126330.xyz/p/12/","title":"Win10 Win11系统版本一键切换"},{"content":"DK13378的个人空间-DK13378个人主页-哔哩哔哩视频\n这游戏就是把80，90年代日美输入的文化消化之后拉给他们看 ","date":"2024-11-02T00:00:00Z","image":"https://tuwwzs.pages.dev/file/1730557633399_20241102222704.png","permalink":"https://hugo.126330.xyz/p/10/","title":"B站用户DK13378对《昭和米国物语》的评价"},{"content":"前言 💡硅云提供的一年免费顶级域名注册需要实名认证\n一，注册硅云账号 1.点击硅云 2.点击注册 3.按提示输入 用户名： 联系邮箱：（官方推荐使用国内邮箱） 密码：\n二，实名 1.注册成功并登录后点击用户中心，实名认证 2.实名之后按下图找到域名模板，点击添加新模板 💡 注意：域名注册提交的英文信息根据上文自动填写，注意看一眼对不对\n保存后等几十分钟，工作日一般不超2小时，实名通过后进行下一步\n三，注册域名 1.实名后点击此链接，之后在搜索框里输入你想要的域名，然后点击查域名 2.在结果中自行选择想要的域名，点击立即注册 3.设置域名信息模板为你已经审核通过的模版 4.同意协议后提交订单 提交订单后如下图登入域名管理，你也可以自由的将域名托管到其他DNS服务商\n","date":"2024-11-02T00:00:00Z","image":"https://tuwwzs.pages.dev/file/1729063670074_PixPin_2024-10-14_00-12-24.png","permalink":"https://hugo.126330.xyz/p/11/","title":"硅云新人免费一年顶级域名注册教程"},{"content":"步骤 1: 注册账号 在 [Serv00](Serv00.com » Create an account) 注册一个账号。\n步骤 2: 部署准备 在 Panel 中的 Additional services 选项卡里，找到 Run your own applications，并设置为 Enabled。 通过 ssh 连接到虚拟主机。\nserv00安装pm2：脚本来源Saika博客\n1 bash \u0026lt;(curl -s \u0026lt;https://raw.githubusercontent.com/k0baya/alist_repl/main/serv00/install-pm2.sh\u0026gt;) 步骤 4: 创建工作目录 创建并进入工作目录：\n1 cd domains \u0026amp;\u0026amp; mkdir halo \u0026amp;\u0026amp; cd halo 步骤 5: 下载 Halo Jar 包 下载编译好的 Jar 包（可选择本项目或官方版本）：\n1 wget https://github.com/V-UwU/halo-PaaS/releases/download/v2.17.2/halo.jar 步骤 6: 配置数据库和应用 在 Serv00 面板中新建一个 MySQL 数据库。 在 halo 目录中新建文件夹 .halo 并创建配置文件 application.yaml： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 server: port: #面板中放行的端口号 compression: enabled: false spring: r2dbc: url: r2dbc:pool:mysql://数据库地址:3306/数据库名 username: #数据库用户名 password: #数据库密码 halo: admin-path: admin cache: level 步骤 7: 创建启动脚本 在 halo 目录中创建 run.sh 文件：\n1 2 3 4 #!/bin/bash export HALO_WORK_DIR=\u0026#34;/home/用户名/domains/halo/.halo\u0026#34; export HALO_EXTERNAL_URL=\u0026#34;https://你的域名\u0026#34; java17 -server -Xms128m -Xmx256m -jar -Duser.timezone=Asia/Shanghai /home/用户名/domains/halo/halo.jar --spring.config.additional-location=/home/用户名/domains/halo/.halo/application.yaml 步骤 8: 测试运行 测试运行 Jar 包：\n1 chmod +x run.sh \u0026amp;\u0026amp; ./run.sh 如果运行正常，按 Ctrl+C 停止运行。\n步骤 9: 使用 PM2 管理服务 通过 pm2 管理 Halo：\n1 chmod +x run.sh \u0026amp;\u0026amp; pm2 start ./run.sh --name halo 步骤 10: 设置自动重启 在 Panel 的 Cron jobs 选项卡中，选择 Add cron job。 配置： Specify time：选择 After reboot Form type：选择 Advanced Command： 1 /home/你的用户名/.npm-global/bin/pm2 resurrect \u0026gt;/dev/null 2\u0026gt;\u0026amp;1 \u0026amp;\u0026amp; /home/你的用户名/.npm-global/bin/pm2 restart all \u0026gt;/dev/null 2\u0026gt;\u0026amp;1 保存 PM2 的当前任务列表快照：\n1 pm2 save 通过这些步骤即可完成 Halo 部署和自动重启设置。\n","date":"2024-10-31T00:00:00Z","image":"https://tuwwzs.pages.dev/file/1730386699078_Clip_2024-10-31_22-57-51.png","permalink":"https://hugo.126330.xyz/p/9/","title":"serv00搭halo"},{"content":"项目地址GitHub 教程地址默库 项目介绍 聚合脚本（polymerization） 文件夹“polymerization”内的所有脚本统称为聚合脚本，运行UPDATE.js即可自动生成表格及配置内容。\n兼容青龙脚本，可直接在青龙内下运行\n聚合脚本优势 金山文档\n所有脚本及配置表格汇集在一个文档中，利于统一管理和配置 方便后续更新脚本，仅需运行UPDATE脚本即可自动新增最新表格及配置，不再需要手动新建表格框架 方便定时任务的添加与查看 支持仅推送错误消息、推送昵称等，支持更多的推送方式 配置灵活快捷，利于新增脚本及新配置功能 支持多脚本共用同一个表格，如WPS(轻量版)、WPS(客户端版)、WPS(稻壳版)脚本共用名称为wps的表格。\n青龙 ql开头的脚本也可以直接在青龙中运行 金山文档建议 定时任务不设在同一时间 🧾 签到列表 🟢: 正常 🔴: 失效 🟡: 待测 🟤: 随缘\n状态 终端 名称 脚本 检查日期 备注 🟢️ WEB 百度贴吧 tieba.js 24-07-18 签到、只能签6个左右 🟢️ WEB 有道云笔记 noteyoudao.js 23-08-08 签到、领取空间 🟢️ WEB 什么值得买 ql_smzdm.js 24-06-20 抽奖的碎银子，仅抽奖 🟢️ WEB 在线工具 ql_toollu.js 24-06-20 签到获取积分 🟢️ APP 叮咚买菜-叮咚鱼塘 ddmy_ddyt.js 24-06-23 领积分、签到、喂饲料 🟢️ APP AcFun ql_acfun.js 24-07-18 签到得香蕉 🟢️ APP 喜马拉雅 ql_xmly.js 24-06-20 签到 🟢️ APP 希沃白板 ql_easinote.js 24-09-07 签到得空间 🟢️ APP 小木虫 ql_xmc.js 24-08-04 签到得金币 🟢️ WEB 夸克网盘 ql_quark.js 24-09-07 签到得空间 🟢️ APP 葫芦侠3楼 huluxia.js 24-06-20 板块签到 🟢️ WEB 中兴社区 ql_ztebbs.js 24-07-18 签到,得经验和流星 🟢️ APP 小米商城 ql_mi.js 24-07-18 签到,得米金 🟢️ WEB 看雪论坛 ql_kanxue.js 24-06-20 签到,得雪币 🟢️ WEB 哔哩哔哩 ql_bilibili.js 24-06-20 直播签到,得经验、辣条和银瓜子 🟢️ APP vivo社区 vivo.js 24-06-24 签到得积分,抽奖 🟢️ wx WPS(打卡版) ql_wps_daka.js 24-09-07 金山文档微信小程序报名和打卡，领取权益 🟢️ WEB 阿里云盘(自动更新token版) aliyun.js 24-06-20 签到，领取奖励（已无法自动领奖励），领取备份奖励 🟢️ WEB 宽带技术网 chinadsl.js 24-08-05 签到得积分、做任务、领取猫粮 🟢️ APP golo汽修大师 ql_golo.js 24-06-20 签到得积分,自动更新token 🟢️ WEB 中兴商城 ztemall.js 24-09-07 签到、做任务,得积分 🟢️ WEB 万能福利吧 wnflb.js 24-06-12 签到,得积分 🟢️ WEB 废文 ql_fwxs.js 24-08-15 签到 🟢️ wx 鸿星尔克 ql_hxek.js 24-09-07 签到,得积分 🟢️ APP 钉钉AI ql_ddai.js 24-09-07 签到,领算粒 🟢️ WEB 科研通 ql_kyt.js 24-09-07 签到,得积分 ","date":"2024-10-31T00:00:00Z","image":"https://tuwwzs.pages.dev/file/1730218015576_Clip_2024-10-30_00-06-39.png","permalink":"https://hugo.126330.xyz/p/8/","title":"WPS定时重放脚本框架，零成本，无需服务器，无需部署"},{"content":"什么是 Hexo？ Hexo 是一个快速、简洁且高效的博客框架。 Hexo 使用 Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n一，搭建前的软件准备 搭建之前需要准备的软件： Git：官网下载：https://git-scm.com/ Git安装教程:https://www.cnblogs.com/xueweisuoyong/p/11914045.html Node.js 官网下载：http://nodejs.cn/ 这篇文章里有修改node.js缓存路径的教学:https://www.cnblogs.com/liuqiyun/p/8133904.html 如果觉得下载麻烦可以通过网盘下载： 小飞机网盘下载链接：（node-v20.18.0-x64，Git-2.46.2-64-bit） 链接：https://share.feijipan.com/s/voCrF8tW\n测试下是否都下载成功\n1 2 3 node -v npm -v git -v 二， 安装hexo。 下载hexo 1 npm install hexo-cli -g 本地生成博客内容 在喜欢位置新建文件Blog，然后进入文件夹 右键空白处然后点Git bash here，依次输入 1 2 hexo init hexo install 如果提示‘command not find’，就在前面加上npx，如：npx hexo init\n接着依次输入\n1 2 hexo g hexo s 国内与github连接不稳定，可能无法连接，最好挂个梯子\n#搭建GitHub仓库\n注册/登入Github 点击Create a new repository（创建仓库）进入新建仓库页面 仓库名输入： 1 用户名.github.io 注意：此处必须为你的GitHub用户名\n勾选 Public（公共）\n勾选 Add a README file（添加一个README文件）\n拉到下面点击create（创建 ）创建\n生成SSH Keys 进入任意文件夹，右键空白处然后点Git bash here,输入\n1 ssh-keygen -t rsa -C \u0026#34;邮件地址\u0026#34; 此处“邮件地址”为你注册GitHub的邮件\n敲4次Enter 进入C:\\Users\\用户名，在里面进入.ssh文件 用记事本打开里面的id_rsa.pub,全选复制里面的代码 然后打开github 进入用户设置，找到SSH keys 新建SSH keys，名称随意，在下面粘贴代码， 点击创建 ##测试是否成功 在git bash中输入 1 ssh -T git@github.com 敲Enter，然后再输入yes\n本地博客部署到GitHub 进入之前的Blog文件夹，用记事本打开_config.yml 拉到最下面将deploy后面的全删掉，复制粘贴这段 1 2 3 type: git repository: branch: main 注意缩进格式：每行前面都有两个空格不要删，每个冒号后面都有个空格也不要删\n去github之前生成的仓库页面，点code，复制https链接 将其粘贴到我们记事本中的repository：后面 然后保存退出 ##回到博客文件夹，git bash 安装自动部署发布工具 1 npm install hexo-deployer-git --save 然后在Blog文件夹右键打开git bash，依次输入\n1 2 hexo g（生成） hexo d（上传） 如果是第一次使用git的话会需要配置\n1 2 git config --global user.email \u0026#34;你的邮箱\u0026#34; git config --global user.name \u0026#34;你的名字\u0026#34; 配置完后再 hexo d 上传\n在跳出来的窗口内进行登录\n这样就成功把本地内容上传到github了\n上传成功以后，我们就算搭建好了！上自己的网址看看吧\n网址是我们之前设的仓库名：用户名.github.io\n","date":"2024-10-30T00:00:00Z","image":"https://tuwwzs.pages.dev/file/1730220319146_Clip_2024-10-30_00-45-03.png","permalink":"https://hugo.126330.xyz/p/7/","title":"Hexo博客搭建"},{"content":"项目地址https://github.com/MarSeventh/CloudFlare-ImgBed ‼️ 本方案基于 Cloudflare Pages 和 Telegram （文件大小不超过20MB，过大图片会自动压缩）。\n一，介绍 1.开源 前端开源（可自行修改、打包使用） 2.炫酷的动效（ 流畅丝滑的过渡动画~ 上传文件实现呼吸灯效果 3.人性化上传 支持绝大多数常见图片、视频、动图等 支持多种上传方式（拖拽点击、粘贴） 粘贴上传支持文件和URL 支持批量上传（不限同时选择文件数量，但为了保证稳定性，同时处于上传状态的文件最多为10个） 上传显示实时上传进度 上传后图片无需手动点击，可直接展示在管理页面中 过大图片在前端进行压缩，提升上传稳定性和加载性能 支持自定义压缩质量，自定义开启前后端压缩功能 4.多样化复制 支持整体复制和单独复制（整体复制即将所有链接通过换行串联起来后复制） 支持MarkDown、HTML、BBCode和原始链接四种格式复制 上传完成后直观展示四种格式链接 5.支持身份认证、防滥用 支持Web和API上传认证 支持访问域名限制 支持上传IP统计 6.支持页面自定义 页面背景支持单图、自定义多图轮播、bing随机图轮播等多种模式 自定义图床名称和Logo 自定义网站标题和Icon 7.一些小功能 支持随机图API，从图床中随机返回一张图片 8.以及原版所有特性 1.无限图片储存数量，你可以上传不限数量的图片\n2.无需购买服务器，托管于 Cloudflare 的网络上，当使用量不超过 Cloudflare 的免费额度时，完全免费\n3.无需购买域名，可以使用 Cloudflare Pages 提供的*.pages.dev的免费二级域名，同时也支持绑定自定义域名\n4.支持图片审查 API，可根据需要开启，开启后不良图片将自动屏蔽，不再加载\n5.支持后台图片管理，可以对上传的图片进行在线预览，添加白名单，黑名单等操作\n二，部署 1.创建Telegram机器人得到TG_BOT_TOKEN 向@BotFather发送/newbot，按照提示输入bot的备注、用户名等信息。成功创建如图所示的红色部分为TG_BOT_TOKEN。\n创建Telegram频道得到**TG_CHAT_ID** 创建一个新的频道（Channel），并按下图所示将机器人加入频道\n选择你刚创建的频道，授予机器人管理员权限 向@VersaToolsBot转发一条第2步新建频道中的消息，获取TG_CHAT_ID（频道ID） ‼️ **频道ID前有个负号不要忘了!!** 部署于Cloudflare 依托于CF的强大能力，只需简单几步，即可部署本项目，拥有自己的图床。\nFork 打开 Cloudflare Dashboard，进入 Pages 管理页面，选择创建项目，选择连接到 Git 提供程序 按照页面提示输入项目名称，选择需要连接的 git 仓库，点击部署站点\n将前面获取的TG_BOT_TOKEN和TG_CHAT_ID分别添加到环境变量中，对应环境变量名为TG_BOT_TOKEN和TG_CHAT_ID\n绑定KV数据库：\n创建一个新的KV数据库\n进入项目对应设置\u0026gt;函数\u0026gt;KV 命名空间绑定\u0026gt;编辑绑定\u0026gt;变量名称，填写img_url，KV命名空间选择刚才创建好的KV数据库\n重试部署，此时项目即可正常使用\n","date":"2024-10-30T00:00:00Z","image":"https://tuwwzs.pages.dev/file/1729153609714_68747470733a2f2f616c6973742e73616e7975652e736974652f642f696d676265642f3230323431303031313434333537302e706e67.png","permalink":"https://hugo.126330.xyz/p/6/","title":"基于 Cloudflare Pages 和 Telegram的免费图床搭建教程"},{"content":"项目地址https://github.com/Meekdai/Gmeek 博客原文地址Gmeek博客一键搭搭建教程 Gmeek 搭建教程 Gmeek 是一个超轻量级的个人博客框架，完全基于 GitHub Pages、GitHub Issues 和 GitHub Actions 构建。无需本地部署，从搭建到写作仅需 18 秒 和 两步，而 第三步 就可以开始写作。\n前言 Gmeek 旨在为个人博客提供一个简洁、高效的解决方案。借助 GitHub 的强大功能，你无需担心服务器配置和维护，只需简单几步即可完成博客的搭建与管理。Gmeek 利用了 GitHub Pages 进行静态页面托管，GitHub Issues 作为博客文章的创作平台，GitHub Actions 自动化部署流程，使整个流程自动化、无缝衔接。\n特点 与 GitHub 同源的 UI 界面：采用 GitHub 原生 CSSprimer.style，界面风格与 GitHub 无缝衔接。\n自动化部署：在 Issues 中完成博客写作后，自动触发 GitHub Actions 执行部署任务。\n评论系统：集成 utteranc.es 作为评论系统，轻量且易于使用。\n可自定义主题：使用 Jinja2 对 HTML 进行渲染，支持通过模板自定义 UI 主题。\n无需本地部署：所有操作均在 GitHub 上完成，简化部署流程。\n示例 官方 Demo页面\n我建立的https://wanwuzhishi.github.io/\n快速上手 按照以下步骤，可以在 两步，18 秒 内完成 Gmeek 博客的搭建。\n1. 创建仓库 通过模板创建仓库： - 点击通过模板创建仓库\n命名仓库： - 推荐将仓库命名为 YOUR_GITHUB_USERNAME.github.io，其中 YOUR_GITHUB_USERNAME 为你的 GitHub 用户名。\n- 示例：如果你的 GitHub 用户名为 wanwuzhishi，则仓库名称应为 wanwuzhishi.github.io。\n完成仓库创建： - 点击 Create repository 完成仓库的创建。\n2. 启用 GitHub Pages 进入仓库设置： - 在新创建的仓库页面，点击上方的 Settings 标签。\n配置 Pages： - 在左侧菜单中，找到并点击 Pages。\n- 在 Build and deployment 部分，设置 Source 为 GitHub Actions。\n保存设置： - 确认设置后，页面会自动保存，并显示部署状态。\n3. 开始写作 创建 Issue 文章： - 进入仓库的 Issues 页面，点击 New issue 创建一篇新的文章。\n添加标签： - 在创建 Issue 时，至少添加一个 Label（标签），例如 blog。\n保存 Issue： - 完成内容撰写后，点击 Submit new issue 提交。\n自动生成博客内容： - 提交 Issue 后，GitHub Actions 会自动触发构建流程。\n- 片刻后，你的博客内容将生成并部署到 https://YOUR_GITHUB_USERNAME.github.io。\n查看构建进度： - 可进入 Actions 页面查看构建的详细进度和日志。\n4. 手动全局生成 在以下情况下，需要手动全局生成博客内容：\n修改了 config.json 文件。\n出现了构建或显示上的奇怪问题。\n操作步骤：\n进入 Actions 页面： - 在仓库页面，点击上方的 Actions 标签。\n找到 Build Gmeek 工作流： - 在左侧工作流列表中，选择 build Gmeek。\n运行工作流： - 点击 Run workflow 按钮，手动触发一次全局重新生成。\n提交问题 如果在搭建或使用过程中遇到问题，可以参考以下步骤提交问题：\n参考快速上手： - 检查是否按照快速上手中的步骤正确操作。\n手动全局生成： - 在提交问题之前，先手动全局生成一次，确保问题不在配置文件或构建流程中。\n提交 Issue： - 如果问题依旧存在，进入仓库的 Issues 页面，点击 New issue 提交你的问题描述。\n- 提供尽可能详细的信息，例如错误日志、截图等，以便更快定位问题。\n协助解决： - 提交后，项目维护者会协助查看构建流程，帮助定位和解决问题。\n总结 Gmeek 为个人博客的创建和管理提供了一个简洁、快捷且高效的解决方案。通过利用 GitHub 的强大功能，用户无需担心复杂的部署流程，只需专注于内容创作即可。如果你正在寻找一个轻量级且易于维护的博客框架，Gmeek 无疑是一个值得尝试的选择。\n","date":"2024-10-29T00:00:00Z","image":"https://tuwwzs.pages.dev/file/1729411266664_light.jpg","permalink":"https://hugo.126330.xyz/p/3/","title":"Gmeek博客一键搭搭建教程"},{"content":"一、设计理念与商业模式 理念：\nWindows：注重用户界面的友好性和易用性，旨在为普通用户提供直观、功能丰富的桌面操作系统，满足办公、娱乐等多种需求。 Linux：强调开源、自由和高度可定制性，更倾向于技术人员、开发者和专业场景的需求。 商业模式：\nWindows：微软的商业产品，用户需购买正版授权，虽然存在未授权使用情况。 Linux：大多数发行版开源免费，主要通过技术服务和企业定制等周边服务盈利。 二、用户界面 桌面环境：\nWindows：统一标准的图形界面（如开始菜单、任务栏），操作简单易上手。 Linux：多种桌面环境（如GNOME、KDE），不同发行版的界面风格和操作习惯差异较大，但易用性在不断提升。 命令行：\nWindows：CMD或PowerShell功能相对较少，主要用于基本操作。 Linux：命令行功能强大，许多操作通过命令行完成更高效，是系统管理和开发的重要工具。 三、软件生态 通用软件：\nWindows：拥有庞大的软件生态，几乎所有主流商业软件和行业软件都有Windows版本。 Linux：软件生态在发展中，但在某些专业软件（尤其是闭源商业软件）支持上不如Windows。 开源软件：\nWindows：有开源软件，但不是主流。 Linux：开源软件是其重要组成部分，许多开源项目首先支持Linux。 四、安全性 更新机制：\nWindows：统一更新机制，强制更新可能困扰用户，但有助于安全性提升。 Linux：不同发行版有灵活的更新策略。 安全特性：\nWindows：有防火墙和安全中心等防护体系。 Linux：权限管理严格，普通用户权限较小；开源特性使漏洞更快被发现和修复，服务器安全性表现突出。 五、系统稳定性 系统核心：\nWindows：在复杂软硬件环境下偶尔会崩溃或蓝屏。 Linux：内核稳定高效，适合长时间高负荷运行（如服务器）。 驱动兼容性：\nWindows：对新硬件驱动支持较好，但可能因驱动问题导致不稳定。 Linux：驱动支持较复杂，但主流硬件基本兼容。 六、系统架构与内核 内核：\nWindows：闭源内核。 Linux：开源内核，遵循POSIX标准，Unix应用易于移植。 系统架构：\nWindows：主要针对个人电脑、笔记本和服务器设计。 Linux：除了常见计算机设备，还广泛应用于嵌入式设备（如路由器、智能电视等）。 七、文件系统 Windows：常用NTFS等文件系统，路径使用反斜杠“\\”。 Linux：常用ext4等文件系统，路径使用正斜杠“/”。 八、多用户特性 Windows：多用户功能主要体现在不同用户有各自配置，服务器版本多用户管理更强大。 Linux：天然适合多用户同时登录和使用系统资源，严格的权限管理和资源配额。 九、应用场景 Windows：广泛用于个人电脑、办公环境和家庭娱乐。 Linux：在服务器领域（如Web服务器、数据库服务器）占据主导地位，开发领域深受开发者喜爱，嵌入式领域也广泛应用。 ","date":"2024-10-29T00:00:00Z","image":"https://tuwwzs.pages.dev/file/1730215638981_linux-vs-windows.png","permalink":"https://hugo.126330.xyz/p/1/","title":"Windows系统与Linux系统的区别"},{"content":"服务器类别概述 前言简介 在数字化和互联网快速发展的今天，服务器作为支撑网站、应用程序及各种在线服务的基础架构，扮演着至关重要的角色。无论是个人博客、中小企业还是大型企业，选择合适的服务器类型对于确保业务稳定运行和服务质量至关重要。\n本教程旨在为读者提供一个全面的指南，帮助您理解当前市场上不同类型的服务器及其特点。通过了解独立服务器、虚拟服务器（VPS）、基于NAT的虚拟服务器（NAT-VPS）、云服务器、托管服务器以及共享主机等各类服务器的特点，您可以根据自身业务需求、预算和技术能力做出明智的选择。\n我们将逐一探讨每种服务器的优点与缺点，涵盖从成本效益到安全性，再到可扩展性 和管理便捷性等多个方面。无论您是刚开始接触服务器概念的新手，还是寻求升级现有基础设施的经验丰富的IT专业人士，这篇教程都将为您提供宝贵的信息，助力您找到最适合您的解决方案。现在，让我们深入探索这些服务器种类，以便更好地服务于您的项目或业务目标。 。\n(1) 独立服务器 独立服务器（又称母鸡、独服）是服务商提供的一整台物理服务器，所有资源专属于您，不会与他人共享。\n优点：\n性能强大，资源充足。 缺点：\n成本较高，通常价格在300元以上，高性能的可能会达到四位数。 (2) 虚拟服务器 (VPS) 虚拟服务器（VPS、小鸡）利用虚拟化技术，将一台物理服务器的资源分割成多个虚拟服务器，提供给用户使用。价格相对独立服务器更低，配置灵活。\n优点：\n资源灵活分配，可按需选择配置。 缺点：\n宿主物理服务器故障时，所有虚拟机会受到影响（虽然这种情况较少）。 部分服务商可能存在超售现象，或遇到恶意用户影响性能。 (3) 基于 NAT 的虚拟服务器 (NAT-VPS) NAT-VPS是在虚拟服务器基础上，通过共享IP提供外网访问能力。\n优点：\n成本更低，几乎没有IP费用。 缺点：\n若邻居使用VPN等工具，可能导致IP被封锁。 被封锁后，同一IP下的所有服务器将无法连接。 只能使用固定端口访问，限制了建站功能。 (4) 云服务器 云服务器（云主机）基于云计算技术，提供虚拟化计算资源，通常由大型云服务提供商（如阿里云、腾讯云、AWS等）提供。\n优点：\n弹性伸缩：可快速调整计算能力。 高可用性：数据和服务可在多个位置复制。 按需付费：根据使用量计费，更灵活。 易于管理：提供简化的管理界面。 缺点：\n数据隐私问题：敏感数据存储在第三方。 网络依赖：网络故障可能影响服务可用性。 长期使用成本：按需付费虽看似经济，但长期使用总成本可能高于物理服务器。 (5) 托管服务器 托管服务器是客户购买自己的硬件并放置在服务商数据中心，由服务商提供基础设施支持。\n优点：\n完全控制：客户可自由选择硬件和软件。 稳定性与安全性：专业数据中心提供更优环境。 缺点：\n初始投资较高：需购买硬件设备。 维护责任：客户需自行处理系统级维护。 升级复杂：硬件固定后，升级过程相对复杂。 (6) 共享主机 共享主机是最基础的网站托管形式，适合小型网站和个人博客。在此模式下，多个用户共享同一台物理服务器的资源。\n优点：\n成本低：适合预算有限的小型项目。 易于使用：通常配备简单控制面板，便于管理。 缺点：\n资源受限：共享资源，可能影响性能。 性能波动：其他用户活动可能影响网站表现。 安全风险：若某用户受攻击，可能影响其他用户。 总结来说，每种服务器类型都有其适用场景和优缺点，选择时应根据自身需求和预算做出决策。\n","date":"2024-10-29T00:00:00Z","image":"https://tuwwzs.pages.dev/file/1730009318626_20241027140819.png","permalink":"https://hugo.126330.xyz/p/4/","title":"服务器的类别"},{"content":"项目地址 https://github.com/Pintree-io/pintree 下方文本全盘照搬项目原文，推荐去看原文 Pintree Pintree 是一个开源项目，旨在将浏览器书签导出成导航网站。通过简单的几步操作，就可以将书签转换成一个美观且易用的导航页面。\n项目功能和目标 导出浏览器书签 将书签文件转换成JSON格式 生成静态导航网站 安装和运行 步骤 1：下载浏览器书签 安装 Pintree Bookmarks Exporter 插件。 使用插件导出浏览器书签，并保存 JSON 文件到本地。 步骤 2：Fork 项目 访问 Pintree GitHub 仓库。 点击页面右上角的 Fork 按钮，将项目 Fork 到您的 GitHub 账号中。 步骤 3：替换 JSON 文件 打开您 GitHub 账号中的 pintree 仓库（即刚才 Fork 的项目）。 点击仓库中的 json 文件夹。 点击 Upload files 按钮，选择刚才下载的 JSON 文件，并上传。 确保上传的文件命名为 pintree.json，并选择 Commit changes。 步骤 4：启用 GitHub Pages 在您的 pintree 仓库页面，点击 Settings。 找到 Pages 选项。 在 Source 下拉菜单中，选择 gh-pages 分支，然后点击 Save。 几分钟后，您的静态网站将会在 https://yourusername.github.io/pintree 上可用。记得替换 yourusername。 ","date":"2024-10-29T00:00:00Z","image":"https://tuwwzs.pages.dev/file/1729088850082_Clip_2024-10-16_22-27-15.png","permalink":"https://hugo.126330.xyz/p/2/","title":"利用GitHub开源项目建立个人网址导航站"},{"content":"前言 📌\n对于那些希望拥有自己的域名但预算有限的站长们，这里为您精心整理了一份免费域名提供者的清单。在互联网的广阔世界中，拥有一片属于自己的领地——即一个独立的网站——不仅是实现个人价值的一种方式，更是连接世界、传递声音的重要途径。然而，域名注册费用往往成为许多初创者面前的一道门槛。幸运的是，随着互联网的发展，越来越多的服务商开始提供免费的域名选项，旨在帮助更多人轻松启动他们的在线项目。本文不定时更新\n一，顶级域名 1.硅云 新人提供免费一年顶级域名\n硅云新人免费一年顶级域名注册教程\n2.www.names.co.uk 提供一年免费域名\n二，二级域名 1，| site.ac | Free Domain and Services | Register Now. Use Forever. 提供9种域名后缀，每个号可注册3个二级域名\n➡️此域名可以托管到FREEDNS :: 42进行DNS解析\n2• NL公益二级域名分发 提供一种域名后缀，每个号可注册5个二级域名\n3.US.KG 提供一种域名后缀，每个号可注册3个域名\n➡️此域名可以托管到大部分出名的DNS服务商进行DNS解析\n4.ClouDNS 提供一种域名后缀，每个号可注册1个域名\n5.DNSEXIT 提供5种域名后缀\n6.freedns 提供25,547种域名后缀，标为公共的可以直接注册，标为私人的需要域名所有人审核，此网站域名只可以A记录，其他记录需要管理员授权，每个号可注册5个域名\n7.https://ydns.io/ 提供一种域名后缀，但只有下图所示的解析方式 8.https://www.dynu.com/zh-CN/ControlPanel/AddDDNS 提供11种免费后缀域名，谷歌账号可直接登录 ⚠️\n使用免费域名的小贴士 了解限制：虽然上述服务都是免费提供的，但它们通常会有一些限制，比如广告展示、续期政策或是功能上的局限性。在选择之前，请务必仔细阅读相关条款。 定期检查：免费域名可能会有到期的风险，因此定期检查域名状态并按时续期是非常重要的，以避免因疏忽导致域名丢失。 ","date":"2024-10-29T00:00:00Z","image":"https://tuwwzs.pages.dev/file/1729091846357_OIP (1).jpg","permalink":"https://hugo.126330.xyz/p/blog-post-slug/","title":"免费域名提供者清单"}]